diff -ruN ZunePaint/src/Quant_Octree.c ZunePaint.aros/src/Quant_Octree.c
--- ZunePaint/src/Quant_Octree.c	2017-03-25 17:20:22.000000000 +0000
+++ ZunePaint.aros/src/Quant_Octree.c	2018-08-31 18:31:19.059242387 +0100
@@ -19,9 +19,9 @@
 } node_heap;
 
 /* memory pool used for node storage */
-APTR pool = NULL;
+static APTR nodepool = NULL;
  
-inline int cmp_node(oct_node a, oct_node b)
+static inline int cmp_node(oct_node a, oct_node b)
 {
 	if (a->n_kids < b->n_kids) return -1;
 	if (a->n_kids > b->n_kids) return 1;
@@ -114,7 +114,7 @@
 {
     int i;
 
-    oct_node x = (oct_node)AllocPooled(pool, sizeof(oct_node_t));
+    oct_node x = (oct_node)AllocPooled(nodepool, sizeof(oct_node_t));
     
     /* init node */
 	x->r = 0;
@@ -136,8 +136,8 @@
 void node_free()
 {
     /* Free everything at once */
-    DeletePool(pool);
-    pool = NULL;
+    DeletePool(nodepool);
+    nodepool = NULL;
 }
  
 oct_node node_insert(oct_node root, ULONG pixel)
@@ -187,9 +187,9 @@
 	oct_node root = NULL; 
     oct_node got;
     
-    pool = CreatePool(MEMF_ANY, sizeof(oct_node_t) * 2048, sizeof(oct_node_t) * 2);
+    nodepool = CreatePool(MEMF_ANY, sizeof(oct_node_t) * 2048, sizeof(oct_node_t) * 2);
     
-    if (pool != NULL)
+    if (nodepool != NULL)
     {
         root = node_new(0, 0, 0);
         
diff -ruN ZunePaint/src/ZunePaint.c ZunePaint.aros/src/ZunePaint.c
--- ZunePaint/src/ZunePaint.c	2018-07-22 16:30:12.000000000 +0100
+++ ZunePaint.aros/src/ZunePaint.c	2018-08-31 18:26:11.018225417 +0100
@@ -594,8 +594,8 @@
     /* Fill in NewMenu structure */
     for (i=0; i<NUM_MENU_ENTRIES; i++)
     {
-        if ((LONG)Menu[i].nm_UserData != -1)
-            Menu[i].nm_Label = _((LONG)Menu[i].nm_UserData);
+        if (Menu[i].nm_UserData != (APTR)-1)
+            Menu[i].nm_Label = _((IPTR)Menu[i].nm_UserData);
         else
             Menu[i].nm_Label = NM_BARLABEL;
     }
